/**
 * scripts/generate-env.js
 *
 * This script:
 *  1) Loads environment variables from .env (via dotenv).
 *  2) Generates (overwrites) src/environments/environment.ts
 *     with the values it finds.
 */

const fs = require('fs');
const path = require('path');
require('dotenv').config();  // ← loads variables from .env into process.env

// 1) Pull values from process.env (fall back to an empty string if undefined)
const authDomain   = process.env.AUTH0_DOMAIN   || '';
const authClientId = process.env.AUTH0_CLIENT_ID || '';
// If you have more variables (e.g. AUTH0_AUDIENCE or AUTH0_SCOPE), grab them the same way:
// const authAudience = process.env.AUTH0_AUDIENCE || '';
// const authScope    = process.env.AUTH0_SCOPE    || 'openid profile email';

// 2) Build the TypeScript content for environment.ts
const targetPath = path.resolve(__dirname, '../src/environments/environment.ts');
const fileContents = `// AUTO-GENERATED by scripts/generate-env.js. Do not edit manually.
export const environment = {
  production: false,
  auth: {
    domain: '${authDomain}',
    clientId: '${authClientId}',
    // If needed, uncomment/add these:
    // audience: '${process.env.AUTH0_AUDIENCE || ''}',
    // scope: '${process.env.AUTH0_SCOPE || 'openid profile email'}',
    // redirectUri: window.location.origin + '/callback'
  }
};
`;

// 3) Ensure the `src/environments` folder exists
const envFolder = path.dirname(targetPath);
if (!fs.existsSync(envFolder)) {
  fs.mkdirSync(envFolder, { recursive: true });
}

// 4) Write (or overwrite) `environment.ts`
fs.writeFileSync(targetPath, fileContents, { encoding: 'utf8' });
console.log(`✅ Wrote environment.ts to ${targetPath}`);